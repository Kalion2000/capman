This reverts the upstream patch to fix the bug
https://crbug.com/676693

This revert does not change any functionality in glibc, it should be safe to
revert.

commit ec2a88b3c659ad4f5a662ca289edae4f0dc19d88
Author: Roland McGrath <roland@hack.frob.com>
Date:   Fri Feb 6 10:53:27 2015 -0800

    Clean up NPTL longjmp to be compat-only.

We may backport an upstream patch in
https://sourceware.org/ml/libc-alpha/2016-12/msg01013.html
after being accepted.

--- a/nptl/pt-longjmp.c
+++ b/nptl/pt-longjmp.c
@@ -18,55 +18,12 @@
    <http://www.gnu.org/licenses/>.  */
 
 #include <setjmp.h>
-#include <shlib-compat.h>
+#include <stdlib.h>
+#include "pthreadP.h"
 
-/* libpthread once had its own longjmp (and siglongjmp alias), though there
-   was no apparent reason for it.  There is no use in having a separate
-   symbol in libpthread, but the historical ABI requires it.  For static
-   linking, there is no need to provide anything here--the libc version
-   will be linked in.  For shared library ABI compatibility, there must be
-   longjmp and siglongjmp symbols in libpthread.so; so we define them using
-   IFUNC to redirect to the libc function.  */
-
-#if SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_22)
-
-# if HAVE_IFUNC
-
-static __typeof (longjmp) *
-__attribute__ ((used))
-longjmp_resolve (void)
-{
-  return &__libc_longjmp;
-}
-
-#  ifdef HAVE_ASM_SET_DIRECTIVE
-#   define DEFINE_LONGJMP(name) \
-  asm (".set " #name ", longjmp_resolve\n" \
-       ".globl " #name "\n" \
-       ".type " #name ", %gnu_indirect_function");
-#  else
-#   define DEFINE_LONGJMP(name) \
-  asm (#name " = longjmp_resolve\n" \
-       ".globl " #name "\n" \
-       ".type " #name ", %gnu_indirect_function");
-#  endif
-
-# else  /* !HAVE_IFUNC */
-
-static void __attribute__ ((noreturn, used))
-longjmp_compat (jmp_buf env, int val)
+void
+longjmp (jmp_buf env, int val)
 {
   __libc_longjmp (env, val);
 }
-
-# define DEFINE_LONGJMP(name) strong_alias (longjmp_compat, name)
-
-# endif  /* HAVE_IFUNC */
-
-DEFINE_LONGJMP (longjmp_ifunc)
-compat_symbol (libpthread, longjmp_ifunc, longjmp, GLIBC_2_0);
-
-DEFINE_LONGJMP (siglongjmp_ifunc)
-compat_symbol (libpthread, siglongjmp_ifunc, siglongjmp, GLIBC_2_0);
-
-#endif
+weak_alias (longjmp, siglongjmp)
